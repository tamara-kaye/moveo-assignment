name: CI/CD
run-name: ${{ github.actor }} is running GitHub Actions
permissions:
  id-token: write  # for AWS assume role(ECR push)
on:
  workflow_dispatch: # Triggered manually, won't run unless you start it explicitly
    inputs:
      mock:
        description: "Mock input"
        required: false
jobs:
  validate:
    name: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Pip install dependencies
        run: pip install -r requirements.txt
      - name: terraform validate
        uses: dflook/terraform-validate@v1
        with:
          path: ./terraform
  build-and-push-docker-image-ecr:
    name: Build and push Docker image to ECR
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::642069671695:role/github-actions
          aws-region: eu-central-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push image to Amazon ECR
        shell: bash
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_TAG: ${{ github.repository }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build . -t "$ECR_REGISTRY/${ECR_TAG,,}:$IMAGE_TAG"
          docker push "$ECR_REGISTRY/${ECR_TAG,,}:$IMAGE_TAG"
          echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/${ECR_TAG,,}"
          echo "image_tag=$IMAGE_TAG" 
          echo "full_image=$ECR_REGISTRY/${ECR_TAG,,}:$IMAGE_TAG"
  create-aws-infra-terraform:
    name: Create AWS infrastructure with Terraform
    runs-on: ubuntu-latest
    needs: build-and-push-docker-ecr
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.0"
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate
      - name: Terraform Apply
        shell: bash
        env:
          IMAGE_TAG: ${{ github.sha }}
          ECR_TAG: ${{ github.repository }}
        working-directory: ./terraform
        run: terraform apply -auto-approve -var "image_tag=${IMAGE_TAG}" -var "ECR_TAG=${ECR_TAG,,}"